import firebase_admin
from firebase_admin import credentials
from firebase_admin import firestore


#춰Hola Jose! Claro, puedo ayudarte con eso. Aqu칤 te dejo una funci칩n que te permitir치 a침adir datos a tu base de datos de Firestore:

#```
def cargar_lista_db(campo):
    # Configura las credenciales de Firebase
    cred = credentials.Certificate('AccessKey.json')
    firebase_admin.initialize_app(cred)

    # Accede a la base de datos de Firestore
    db = firestore.client()

    # Obtiene una referencia a la colecci칩n "CompaCoche"
    ref = db.collection('CompaCoche')

    # Obtiene todos los documentos de la colecci칩n "CompaCoche"
    docs = ref.get()

    # Itera sobre los documentos seg칰n el campo
    # elementos = []
    #    for doc in docs:
    #        elementos.append(doc.to_dict()[campo])
    #
    #    retorno = []
    #    for i in elementos[0]:
    #        retorno.append(i)
    retorno = []
    retorno.append('')
    elementos = docs[0].to_dict()[campo]
    for i in elementos:
        retorno.append(i)
    retorno.append('Otro')

    # Elimina la aplicaci칩n de Firebase
    firebase_admin.delete_app(firebase_admin.get_app())

    return retorno
#```

#Para utilizar esta funci칩n, debes pasarle dos argumentos: el nombre de la colecci칩n a la que quieres a침adir los datos y un diccionario con los datos que quieres a침adir. Por ejemplo, si quisieras a침adir un nuevo coche a la colecci칩n "CompaCoche", podr칤as hacerlo de la siguiente manera:

#```
#datos = {
#    "Zonas": "Puerto de la Torre1"
#}

#agregar_datos_db("CompaCoche", datos)
#```

#Espero que te sea 칰til. Si tienes alguna duda o necesitas ayuda adicional, no dudes en preguntarme


#Claro, para modificar datos en Firebase puedes utilizar la siguiente funci칩n:

def modificar_dato_db(id, campo, valor):
    # Configura las credenciales de Firebase
    cred = credentials.Certificate('AccessKey.json')
    firebase_admin.initialize_app(cred)

    # Accede a la base de datos de Firestore
    db = firestore.client()

    # Obtiene una referencia al documento que se desea modificar
    ref = db.collection('CompaCoche').document(id)

    # Modifica el campo deseado con el nuevo valor
    ref.update({campo: valor})

    # Elimina la aplicaci칩n de Firebase
    firebase_admin.delete_app(firebase_admin.get_app())

    return "El documento con ID {} ha sido modificado exitosamente".format(id)

#En esta funci칩n, debes pasar como par치metros el ID del documento que deseas modificar, el campo que deseas modificar y el nuevo valor que deseas asignar. Recuerda que debes tener los permisos necesarios para modificar datos en la base de datos..


def cargar_lista_db(documento, campo):
    # Configura las credenciales de Firebase
    cred = credentials.Certificate('AccessKey.json')
    firebase_admin.initialize_app(cred)

    # Accede a la base de datos de Firestore
    db = firestore.client()

    # Obtiene una referencia al documento especificado
    ref = db.collection('CompaCoche').document(documento)

    # Obtiene el documento especificado y lo convierte a un diccionario de Python
    doc = ref.get().to_dict()

    # Obtiene el campo especificado del diccionario y lo convierte a una lista
    elementos = doc[campo]

    # Agrega los elementos a la lista de retorno
    retorno = ['']
    for i in elementos:
        retorno.append(i)

    retorno.append('Otro')
    print(retorno)

    # Elimina la aplicaci칩n de Firebase
    firebase_admin.delete_app(firebase_admin.get_app())

    return retorno
    
#cargar_lista_db('FormData','Horario')


#춰Hola de nuevo, Jose! Si deseas a침adir un elemento a un campo de tipo array en un documento existente, puedes utilizar el m칠todo `array_union()` de Firestore.

#Aqu칤 tienes una funci칩n modificada que te permitir치 a침adir un elemento a un campo de tipo array:

#```python
def agregar_elemento_array(coleccion, id_documento, campo, elemento):
    # Configura las credenciales de Firebase
    cred = credentials.Certificate('AccessKey.json')
    firebase_admin.initialize_app(cred)

    # Accede a la base de datos de Firestore
    db = firestore.client()

    # A침ade el elemento al campo de tipo array
    db.collection(coleccion).document(id_documento).update({
        campo: firestore.ArrayUnion([elemento])
    })

    # Elimina la aplicaci칩n de Firebase
    firebase_admin.delete_app(firebase_admin.get_app())

    return "Elemento a침adido correctamente al campo de tipo array"


#En esta funci칩n, debes pasar el nombre de la colecci칩n, el ID del documento, el nombre del campo de tipo array al que deseas a침adir el elemento y el valor del elemento que deseas a침adir.

#El m칠todo `update()` se utiliza para actualizar el campo de tipo array utilizando `firestore.ArrayUnion([elemento])`, que a침ade el elemento al campo existente sin duplicarlo.

#Espero que esto te sea 칰til. 춰Si tienes alguna otra pregunta, estar칠 encantado de ayudarte! 游땕游녨

#agregar_elemento_array('CompaCoche', 'FormData', 'Zonas','Casabermeja')
